# Azure App Service Optimized Dockerfile
FROM python:3.11-slim

# Set working directory
WORKDIR /app

# Set environment variables for Azure App Service
ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    PIP_NO_CACHE_DIR=1 \
    PIP_DISABLE_PIP_VERSION_CHECK=1 \
    PORT=8000 \
    WEBSITES_PORT=8000 \
    WEBSITES_ENABLE_APP_SERVICE_STORAGE=false \
    WEBSITES_CONTAINER_START_TIME_LIMIT=1800 \
    PYTHONPATH=/app \
    STREAMLIT_SERVER_PORT=8000 \
    STREAMLIT_SERVER_ADDRESS=0.0.0.0 \
    STREAMLIT_SERVER_HEADLESS=true \
    STREAMLIT_SERVER_ENABLE_CORS=false \
    STREAMLIT_SERVER_ENABLE_XSRF_PROTECTION=false

# Install system dependencies (optimized for Azure App Service)
RUN apt-get update && apt-get install -y \
    --no-install-recommends \
    build-essential \
    curl \
    tesseract-ocr \
    tesseract-ocr-eng \
    libmagic1 \
    libmagic-dev \
    poppler-utils \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean \
    && apt-get autoremove -y

# Create non-root user for security
RUN groupadd -r appuser && useradd -r -g appuser appuser

# Copy requirements first for better Docker layer caching
COPY requirements-azure.txt .

# Install Python dependencies with optimizations
RUN pip install --no-cache-dir --upgrade pip setuptools wheel && \
    pip install --no-cache-dir -r requirements-azure.txt && \
    pip cache purge

# Download essential NLTK data only
RUN python -c "import nltk; nltk.download('punkt', quiet=True); nltk.download('stopwords', quiet=True)"

# Copy application code
COPY . .

# Create necessary directories with proper permissions
RUN mkdir -p temp uploads logs && \
    chown -R appuser:appuser /app && \
    chmod -R 755 /app

# Set permissions for scripts
RUN chmod +x scripts/*.sh 2>/dev/null || true

# Switch to non-root user
USER appuser

# Expose port (Azure uses PORT environment variable)
EXPOSE $PORT

# Health check for Azure App Service
HEALTHCHECK --interval=30s --timeout=10s --start-period=40s --retries=3 \
    CMD curl -f http://localhost:$PORT/health || exit 1

# Azure App Service startup command with optimizations
CMD ["sh", "-c", "python -m streamlit run src/web/app.py --server.port=$PORT --server.address=0.0.0.0 --server.headless=true --server.enableCORS=false --server.enableXsrfProtection=false --server.maxUploadSize=200"]
