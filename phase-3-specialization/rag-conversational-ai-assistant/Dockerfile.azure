# Azure App Service Optimized Dockerfile for RAG Conversational AI Assistant
# Based on successful patterns from intelligent-document-analysis deployment
FROM --platform=linux/amd64 python:3.11-slim

# Set working directory
WORKDIR /app

# Set environment variables for Azure App Service (consolidated)
ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    PIP_NO_CACHE_DIR=1 \
    PIP_DISABLE_PIP_VERSION_CHECK=1 \
    PORT=8000 \
    WEBSITES_PORT=8000 \
    WEBSITES_ENABLE_APP_SERVICE_STORAGE=true \
    WEBSITES_CONTAINER_START_TIME_LIMIT=1800 \
    PYTHONPATH=/app \
    API_HOST=0.0.0.0 \
    API_PORT=8000 \
    ENVIRONMENT=production \
    DEBUG=false \
    LOG_LEVEL=INFO

# Install system dependencies (optimized for Azure App Service with retry logic)
RUN apt-get update --fix-missing && \
    apt-get install -y --no-install-recommends --fix-missing \
    build-essential \
    curl \
    git \
    tesseract-ocr \
    tesseract-ocr-eng \
    libmagic1 \
    libmagic-dev \
    poppler-utils \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean \
    && apt-get autoremove -y

# Create non-root user for security
RUN groupadd -r appuser && useradd -r -g appuser appuser

# Copy requirements first for better Docker layer caching
COPY requirements-azure.txt .

# Install Python dependencies with optimizations
RUN pip install --no-cache-dir --upgrade pip setuptools wheel && \
    pip install --no-cache-dir -r requirements-azure.txt

# Copy application code
COPY . .

# Create necessary directories with proper permissions
RUN mkdir -p uploads chroma_db logs temp data /app/temp /app/uploads /app/logs /app/chroma_db && \
    chown -R appuser:appuser /app && \
    chmod -R 755 /app && \
    chmod 777 /app/temp /app/uploads /app/logs /app/chroma_db

# Set permissions for scripts
RUN chmod +x scripts/*.sh 2>/dev/null || true

# Switch to non-root user
USER appuser

# Expose port
EXPOSE 8000

# Health check for Azure App Service
HEALTHCHECK --interval=30s --timeout=10s --start-period=40s --retries=3 \
    CMD curl -f http://localhost:8000/health || exit 1

# Azure App Service startup command with optimizations
# Use FastAPI with Uvicorn for better performance on Azure
CMD ["uvicorn", "src.api.main:app", "--host", "0.0.0.0", "--port", "8000", "--workers", "1", "--loop", "uvloop", "--http", "httptools"]
